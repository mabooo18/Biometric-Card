C51 COMPILER V9.01   I2C                                                                   02/22/2017 16:00:37 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE i2c.c LARGE BROWSE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS PRINT(.\List
                    -ings\i2c.lst) PREPRINT(.\Listings\i2c.i) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include <reg51.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  REG51.H
   3      =1  
   4      =1  Header file for generic 80C51 and 80C31 microcontroller.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __REG51_H__
  10      =1  #define __REG51_H__
  11      =1  
  12      =1  /*  BYTE Register  */
  13      =1  sfr P0   = 0x80;
  14      =1  sfr P1   = 0x90;
  15      =1  sfr P2   = 0xA0;
  16      =1  sfr P3   = 0xB0;
  17      =1  sfr PSW  = 0xD0;
  18      =1  sfr ACC  = 0xE0;
  19      =1  sfr B    = 0xF0;
  20      =1  sfr SP   = 0x81;
  21      =1  sfr DPL  = 0x82;
  22      =1  sfr DPH  = 0x83;
  23      =1  sfr PCON = 0x87;
  24      =1  sfr TCON = 0x88;
  25      =1  sfr TMOD = 0x89;
  26      =1  sfr TL0  = 0x8A;
  27      =1  sfr TL1  = 0x8B;
  28      =1  sfr TH0  = 0x8C;
  29      =1  sfr TH1  = 0x8D;
  30      =1  sfr IE   = 0xA8;
  31      =1  sfr IP   = 0xB8;
  32      =1  sfr SCON = 0x98;
  33      =1  sfr SBUF = 0x99;
  34      =1  
  35      =1  
  36      =1  /*  BIT Register  */
  37      =1  /*  PSW   */
  38      =1  sbit CY   = 0xD7;
  39      =1  sbit AC   = 0xD6;
  40      =1  sbit F0   = 0xD5;
  41      =1  sbit RS1  = 0xD4;
  42      =1  sbit RS0  = 0xD3;
  43      =1  sbit OV   = 0xD2;
  44      =1  sbit P    = 0xD0;
  45      =1  
  46      =1  /*  TCON  */
  47      =1  sbit TF1  = 0x8F;
  48      =1  sbit TR1  = 0x8E;
  49      =1  sbit TF0  = 0x8D;
  50      =1  sbit TR0  = 0x8C;
  51      =1  sbit IE1  = 0x8B;
  52      =1  sbit IT1  = 0x8A;
  53      =1  sbit IE0  = 0x89;
C51 COMPILER V9.01   I2C                                                                   02/22/2017 16:00:37 PAGE 2   

  54      =1  sbit IT0  = 0x88;
  55      =1  
  56      =1  /*  IE   */
  57      =1  sbit EA   = 0xAF;
  58      =1  sbit ES   = 0xAC;
  59      =1  sbit ET1  = 0xAB;
  60      =1  sbit EX1  = 0xAA;
  61      =1  sbit ET0  = 0xA9;
  62      =1  sbit EX0  = 0xA8;
  63      =1  
  64      =1  /*  IP   */ 
  65      =1  sbit PS   = 0xBC;
  66      =1  sbit PT1  = 0xBB;
  67      =1  sbit PX1  = 0xBA;
  68      =1  sbit PT0  = 0xB9;
  69      =1  sbit PX0  = 0xB8;
  70      =1  
  71      =1  /*  P3  */
  72      =1  sbit RD   = 0xB7;
  73      =1  sbit WR   = 0xB6;
  74      =1  sbit T1   = 0xB5;
  75      =1  sbit T0   = 0xB4;
  76      =1  sbit INT1 = 0xB3;
  77      =1  sbit INT0 = 0xB2;
  78      =1  sbit TXD  = 0xB1;
  79      =1  sbit RXD  = 0xB0;
  80      =1  
  81      =1  /*  SCON  */
  82      =1  sbit SM0  = 0x9F;
  83      =1  sbit SM1  = 0x9E;
  84      =1  sbit SM2  = 0x9D;
  85      =1  sbit REN  = 0x9C;
  86      =1  sbit TB8  = 0x9B;
  87      =1  sbit RB8  = 0x9A;
  88      =1  sbit TI   = 0x99;
  89      =1  sbit RI   = 0x98;
  90      =1  
  91      =1  #endif
   2          #include "i2c.h"
   1      =1  #ifndef I2C_H
   2      =1  #define I2C_H
   3      =1  
   4      =1  #define I2C_DELAY 0x01  /* For delay i2c bus */
   5      =1  
   6      =1  void I2C_delay(void);
   7      =1  void I2C_start(void);
   8      =1  void I2C_stop(void);
   9      =1  bit I2C_write(unsigned char dat);
  10      =1  unsigned char I2C_read(void);
  11      =1  
  12      =1  #endif
   3          
   4          sbit SDA = P1^0;
   5          sbit SCL = P1^1;
   6          
   7          void I2C_delay(void)
   8          {
   9   1      //      unsigned char i;
  10   1      
  11   1      //      for(i=0; i<I2C_DELAY; i++); //I2C max speed is only 400kHz
  12   1      }
  13          
C51 COMPILER V9.01   I2C                                                                   02/22/2017 16:00:37 PAGE 3   

  14          
  15          void I2C_start(void)
  16          {
  17   1              SCL = 0;
  18   1              SDA = 1;        /* Set SDA */
  19   1              I2C_delay();
  20   1              I2C_delay();
  21   1              SCL = 1;                /* Set SCL */
  22   1              I2C_delay();
  23   1              I2C_delay();
  24   1              SDA = 0;        /* Clear SDA */
  25   1              I2C_delay();
  26   1              I2C_delay();
  27   1              SCL = 0;        /* Clear SCL */
  28   1              I2C_delay();
  29   1      }
  30          
  31          void I2C_stop(void)
  32          {
  33   1              SCL = 0;
  34   1              SDA = 0;                        /* Clear SDA */
  35   1              I2C_delay();
  36   1              I2C_delay();
  37   1              SCL = 1;                        /* Clear SCL */
  38   1              I2C_delay();
  39   1              I2C_delay();
  40   1              SDA = 1;                        /* Set SDA */
  41   1              I2C_delay();
  42   1              I2C_delay();
  43   1      }
  44          
  45          bit I2C_write(unsigned char dat)
  46          {
  47   1              bit data_bit;           
  48   1              unsigned char i;        
  49   1      
  50   1              for(i=0;i<8;i++)                                /* For loop 8 time(send data 1 byte) */
  51   1              {
  52   2                      SCL = 0;
  53   2                      data_bit = dat & 0x80;          /* Filter MSB bit keep to data_bit */
  54   2                      SDA = data_bit;                         /* Send data_bit to SDA */
  55   2                      I2C_delay();    
  56   2                      SCL = 1;
  57   2                      dat = dat<<1;  
  58   2                      I2C_delay();
  59   2                      I2C_delay();
  60   2                      SCL = 0;
  61   2                      I2C_delay();    
  62   2              }
  63   1              SDA = 1;                        /* Set SDA */
  64   1              SCL = 0;                        /* Set SCL */
  65   1              I2C_delay();    
  66   1              SCL = 1;                        /* Clear SCL */
  67   1              data_bit = SDA;         /* Check acknowledge */
  68   1              I2C_delay();
  69   1              I2C_delay();
  70   1              SCL = 0;                        /* Clear SCL */
  71   1              I2C_delay();
  72   1              return data_bit;        /* If data_bit = 0 i2c is valid */                      
  73   1      }
  74          
  75          unsigned char I2C_read(void)
C51 COMPILER V9.01   I2C                                                                   02/22/2017 16:00:37 PAGE 4   

  76          {
  77   1              bit rd_bit;     
  78   1              unsigned char i, dat;
  79   1      
  80   1              dat = 0x00;     
  81   1              SDA = 1;
  82   1              for(i=0;i<8;i++)                /* For loop read data 1 byte */
  83   1              {
  84   2                      SCL = 0;                        /* Clear SCL */
  85   2                      I2C_delay();
  86   2                      SCL = 1;                        /* Set SCL */
  87   2      
  88   2                      I2C_delay(); 
  89   2                      I2C_delay();
  90   2                      rd_bit = SDA;           /* Keep for check acknowledge   */
  91   2                      dat = dat<<1;           
  92   2                      dat = dat | rd_bit;     /* Keep bit data in dat */
  93   2                      SCL = 0;                        /* Clear SCL */
  94   2                      I2C_delay();
  95   2       
  96   2              }
  97   1              SDA = 1;
  98   1              SCL = 0;
  99   1              I2C_delay(); 
 100   1              SCL =1;
 101   1              I2C_delay();
 102   1              I2C_delay();
 103   1              SCL =0;
 104   1              I2C_delay();
 105   1              return dat;
 106   1      }
 107          
C51 COMPILER V9.01   I2C                                                                   02/22/2017 16:00:37 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION L?0012 (BEGIN)
0000 120000      R     LCALL   I2C_delay
0003         L?0013:
0003 120000      R     LCALL   I2C_delay
0006 D291              SETB    SCL
0008 120000      R     LCALL   I2C_delay
             ; FUNCTION I2C_delay (BEGIN)
                                           ; SOURCE LINE # 7
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 12
000B 22                RET     
             ; FUNCTION I2C_delay (END)

             ; FUNCTION I2C_start (BEGIN)
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 17
0000 C291              CLR     SCL
                                           ; SOURCE LINE # 18
0002 D290              SETB    SDA
                                           ; SOURCE LINE # 19
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
0004 120000      R     LCALL   L?0012
                                           ; SOURCE LINE # 24
0007 C290              CLR     SDA
                                           ; SOURCE LINE # 25
0009 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 26
000C 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 27
000F C291              CLR     SCL
                                           ; SOURCE LINE # 28
0011 020000      R     LJMP    I2C_delay
             ; FUNCTION I2C_start (END)

             ; FUNCTION I2C_stop (BEGIN)
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
0000 C291              CLR     SCL
                                           ; SOURCE LINE # 34
0002 C290              CLR     SDA
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
0004 120000      R     LCALL   L?0012
                                           ; SOURCE LINE # 40
0007 D290              SETB    SDA
                                           ; SOURCE LINE # 41
0009 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 42
000C 020000      R     LJMP    I2C_delay
             ; FUNCTION I2C_stop (END)

C51 COMPILER V9.01   I2C                                                                   02/22/2017 16:00:37 PAGE 6   

             ; FUNCTION _I2C_write (BEGIN)
                                           ; SOURCE LINE # 45
;---- Variable 'dat' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 50
;---- Variable 'i' assigned to Register 'R6' ----
0000 E4                CLR     A
0001 FE                MOV     R6,A
0002         ?C0004:
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0002 C291              CLR     SCL
                                           ; SOURCE LINE # 53
0004 EF                MOV     A,R7
0005 33                RLC     A
0006 9200        R     MOV     data_bit,C
                                           ; SOURCE LINE # 54
0008 A200        R     MOV     C,data_bit
000A 9290              MOV     SDA,C
                                           ; SOURCE LINE # 55
000C 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 56
000F D291              SETB    SCL
                                           ; SOURCE LINE # 57
0011 EF                MOV     A,R7
0012 25E0              ADD     A,ACC
0014 FF                MOV     R7,A
                                           ; SOURCE LINE # 58
0015 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 59
0018 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 60
001B C291              CLR     SCL
                                           ; SOURCE LINE # 61
001D 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 62
0020 0E                INC     R6
0021 EE                MOV     A,R6
0022 B408DD            CJNE    A,#08H,?C0004
0025         ?C0005:
                                           ; SOURCE LINE # 63
0025 D290              SETB    SDA
                                           ; SOURCE LINE # 64
0027 C291              CLR     SCL
                                           ; SOURCE LINE # 65
0029 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 66
002C D291              SETB    SCL
                                           ; SOURCE LINE # 67
002E A290              MOV     C,SDA
0030 9200        R     MOV     data_bit,C
                                           ; SOURCE LINE # 68
0032 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 69
0035 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 70
0038 C291              CLR     SCL
                                           ; SOURCE LINE # 71
003A 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 72
003D A200        R     MOV     C,data_bit
                                           ; SOURCE LINE # 73
C51 COMPILER V9.01   I2C                                                                   02/22/2017 16:00:37 PAGE 7   

003F         ?C0007:
003F 22                RET     
             ; FUNCTION _I2C_write (END)

             ; FUNCTION I2C_read (BEGIN)
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 80
;---- Variable 'dat' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
                                           ; SOURCE LINE # 81
0002 D290              SETB    SDA
                                           ; SOURCE LINE # 82
;---- Variable 'i' assigned to Register 'R6' ----
0004 FE                MOV     R6,A
0005         ?C0008:
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
0005 C291              CLR     SCL
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
0007 120000      R     LCALL   L?0013
                                           ; SOURCE LINE # 90
000A A290              MOV     C,SDA
000C 9200        R     MOV     rd_bit,C
                                           ; SOURCE LINE # 91
000E EF                MOV     A,R7
000F 25E0              ADD     A,ACC
0011 FF                MOV     R7,A
                                           ; SOURCE LINE # 92
0012 A200        R     MOV     C,rd_bit
0014 E4                CLR     A
0015 33                RLC     A
0016 4F                ORL     A,R7
0017 FF                MOV     R7,A
                                           ; SOURCE LINE # 93
0018 C291              CLR     SCL
                                           ; SOURCE LINE # 94
001A 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 96
001D 0E                INC     R6
001E EE                MOV     A,R6
001F B408E3            CJNE    A,#08H,?C0008
0022         ?C0009:
                                           ; SOURCE LINE # 97
0022 D290              SETB    SDA
                                           ; SOURCE LINE # 98
0024 C291              CLR     SCL
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
0026 120000      R     LCALL   L?0013
                                           ; SOURCE LINE # 103
0029 C291              CLR     SCL
                                           ; SOURCE LINE # 104
002B 120000      R     LCALL   I2C_delay
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
C51 COMPILER V9.01   I2C                                                                   02/22/2017 16:00:37 PAGE 8   

002E         ?C0011:
002E 22                RET     
             ; FUNCTION I2C_read (END)

C51 COMPILER V9.01   I2C                                                                   02/22/2017 16:00:37 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
I2C_delay. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     000BH  -----
I2C_read . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  rd_bit . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_I2C_write . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  data_bit . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
I2C_start. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SDA. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
SCL. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
I2C_stop . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    158    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
