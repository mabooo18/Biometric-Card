#include <reg51.h>  
#include "hal.h"
#include "transmission.h"
#include "response.h"
#include "command.h"
#include "i2c.h"
#include "krisna.h"
#include "memory.h"
#include "state.h"
#include "fs.h"

sbit ATR_START = P1^3;
sbit ATR_DONE = P1^4;
unsigned char buf[CRYPT_BLOCK_LEN];

void send_ATR(void){ //verified
	unsigned char len;
	unsigned int len_address;
	unsigned char i;
	unsigned char atr;
	unsigned int ATR_ADDR;
	ATR_ADDR = 1;
	len_address = 1;
	len = Memory_ReadByte(len_address); //0x0f
	for( i=1; i<(len+1); i++ ) {
    atr = Memory_ReadByte( ATR_ADDR+i );
		Transmission_SendByte( atr );
  }
}

void send_ATR_direct(){
		Transmission_SendByte(0x3B);	
		Transmission_SendByte(0xAA);	
		Transmission_SendByte(0x00);	
		Transmission_SendByte(0x40);	
		Transmission_SendByte(0x0A);	
		Transmission_SendByte(0x50);	
		Transmission_SendByte(0x69);	
		Transmission_SendByte(0x6E);	
		Transmission_SendByte(0x74);	
		Transmission_SendByte(0x61);	
		Transmission_SendByte(0x72);	
		Transmission_SendByte(0xEE);	
		Transmission_SendByte(0xDD);	
		Transmission_SendByte(0xCC);	
		Transmission_SendByte(0xBB);	
		Transmission_SendByte(0xAA);	
}

void main(void){
	ATR_START = 1;
	ATR_DONE = 1;
	init_HW();
	
	send_ATR_direct();
	FS_Init();
	State_Init();

		ATR_DONE = 0;
	while(1){
		Transmission_GetHeader();
		Command_Interpreter();
		Transmission_SendSW();
	}

}